project(opendroneid-core-test C CXX)

include_directories(../libopendroneid)
if(BUILD_MAVLINK)
	include_directories(../libmav2odid ../mavlink_c_library_v2)
	add_executable(odidtest opendroneid_sim.c test_inout.c main.c test_mav2odid.c)
	target_link_libraries(odidtest opendroneid mav2odid m)
endif()

find_package(GTest)
if(NOT GTest_FOUND)
	# If GTest not installed on the system, install it via Conan package manager
	include(conan.cmake)
	conan_cmake_configure(REQUIRES
			# Requires specific package revision to avoid newer ones that need conan 1.43 and above
			# This one is the lastest one that supports conan 1.40.3
			"gtest/1.10.0#36d26e265684c2e38d469fbf37664996"
			GENERATORS cmake_find_package)
	conan_cmake_autodetect(settings)
	conan_cmake_install(PATH_OR_REFERENCE .
			UPDATE
			# force conancenter to circumvent gitlab error when requesting a package lib/version (without user/channel)
			REMOTE conancenter
			SETTINGS ${settings}
			BUILD missing)
	# Tell CMake to use for the FindXXX.cmake generated by Conan instead of the default one
	set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_MODULE_PATH})
endif()

cmake_policy(SET CMP0054 NEW) # Fix warning in GoogleTest for CMake3.16
include(GoogleTest)
find_package(GTest REQUIRED)
if(GTest_FOUND)
	add_executable(unit_odid_wifi_beacon unit_odid_wifi_beacon.cpp)
	if (TARGET GTest::gtest AND TARGET GTest::gtest_main)
		target_link_libraries(unit_odid_wifi_beacon opendroneid GTest::gtest GTest::gtest_main)
	else()
		# Use the deprecated imported target
		target_link_libraries(unit_odid_wifi_beacon opendroneid GTest::GTest)
	endif()
	gtest_add_tests(TARGET unit_odid_wifi_beacon)
endif()
